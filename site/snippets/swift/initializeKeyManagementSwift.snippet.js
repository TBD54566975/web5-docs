export default "func initKeyManagement(env: String?, portableDID: PortableDID?) throws -> BearerDID {\n    let keyManager: LocalKeyManager\n\n    // Determine which key manager to use based on the environment\n    if env == \"production\" {\n        keyManager = KeychainKeyManager()\n    }\n    else {\n        keyManager = InMemoryKeyManager()\n    }\n\n    // Initialize or load a DID\n    if portableDID != nil {\n         // Load existing DID\n        return try DIDJWK.import(\n            keyManager: keyManager,\n            portableDID: portableDID!\n        )\n\n    }\n    else {\n        // Create a new DID\n        return try DIDJWK.create(keyManager: keyManager)\n    }\n\n}\n";