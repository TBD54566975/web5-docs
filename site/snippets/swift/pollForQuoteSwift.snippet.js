export default "var quote: Quote? = nil\nvar close: Close? = nil\n\n// Wait for Quote message to appear in the exchange\nwhile quote == nil {\n    let exchange = try! await tbDEXHttpClient.getExchange(\n        pfiDIDURI: (rfq?.metadata.to)!,\n        requesterDID: customerDid!,\n        exchangeId: (rfq?.metadata.exchangeID)!\n    )\n\n    for message in exchange {\n        if case let .quote(quoteMessage) = message {\n            quote = quoteMessage\n            break\n        } else if case let .close(closeMessage) = message {\n            close = closeMessage\n            break\n        }\n    }\n\n    if quote == nil {\n        // Make sure the exchange is still open\n        if close != nil { break }\n        else {\n            // Wait 2 seconds before making another request\n            try await Task.sleep(nanoseconds: 2_000_000_000)\n        }\n    }\n}\n\n";