export default "func sendRequestToIdvServiceEndpoint(idvServiceEndpoint: String) async throws {\n    guard let url = URL(string: idvServiceEndpoint) else {\n        throw NetworkError.requestFailed(\"Invalid URL\")\n    }\n\n    do {\n        let (data, response) = try await URLSession.shared.data(from: url)\n\n        guard let httpResponse = response as? HTTPURLResponse, \n        httpResponse.statusCode == 200 else \n        {\n            throw NetworkError.badResponse\n        }\n        \n        if let encodedSiopRequest = String(data: data, encoding: .utf8) {\n            try await handleSiopRequest(encodedSiopRequest: encodedSiopRequest) // function shown in next step\n        } else {\n            throw NetworkError.requestFailed(\"Failed to decode response\")\n        }\n    } catch {\n        throw NetworkError.requestFailed(error.localizedDescription)\n    }\n}\n";