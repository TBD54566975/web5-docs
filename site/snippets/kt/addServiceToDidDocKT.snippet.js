export default "import web5.sdk.dids.didcore.Service\nimport web5.sdk.dids.methods.dht.DidDht\n// :prepend-end:\n\n/**\n * Tests for the Update a DID guide\n */\n\ninternal class HowToUpdateDidTest {\n  @Test\n  @Disabled\n  fun `add service to DID Document`() {\n    val keyManager = InMemoryKeyManager()\n    var myBearerDid = DidDht.create(keyManager, CreateDidDhtOptions(publish = true))\n\n    // :snippet-start: addServiceToDidDocKT\n    // create a new service\n    val serviceToAdd = Service.Builder()\n      .id(\"pfi\")\n      .type(\"PFI\")\n      .serviceEndpoint(listOf(\"https://example.com/\"))\n      .build()\n\n    // add a service to the DID document\n    // BUG: https://github.com/TBD54566975/web5-kt/issues/310\n    if(myBearerDid.document.service == null){\n     // myBearerDid.document.service = mutableListOf(serviceToAdd);\n    }\n    else {\n     // myBearerDid.document.service.add(serviceToAdd)\n    }\n\n    // republish the updated DID document\n    DidDht.publish(keyManager, myBearerDid.document)\n    \n// create a new service\nval serviceToAdd = Service.Builder()\n  .id(\"pfi\")\n  .type(\"PFI\")\n  .serviceEndpoint(listOf(\"https://example.com/\"))\n  .build()\n\n// add a service to the DID document\n// BUG: https://github.com/TBD54566975/web5-kt/issues/310\nif(myBearerDid.document.service == null){\n // myBearerDid.document.service = mutableListOf(serviceToAdd);\n}\nelse {\n // myBearerDid.document.service.add(serviceToAdd)\n}\n\n// republish the updated DID document\nDidDht.publish(keyManager, myBearerDid.document)\n";