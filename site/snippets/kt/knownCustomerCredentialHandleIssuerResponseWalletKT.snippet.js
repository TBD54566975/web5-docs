export default "object WalletStorage {\n    var credentialIssuer: String? = null\n    var preAuthorizedCode: String? = null\n    var credentialEndpoint: String? = null\n    var tokenEndpoint: String? = null\n    var accessToken: String? = null\n    var cNonce: String? = null\n}\n\nprivate suspend fun handleIssuerResponse(issuerResponse: IssuerResponse) {\n    issuerResponse.credential_offer?.let { credentialOffer ->\n        val credentialIssuer = credentialOffer.credential_issuer\n        val preAuthorizedCode = credentialOffer.grants[\n            \"urn:ietf:params:oauth:grant-type:pre-authorized_code\"\n        ]?.jsonPrimitive?.content\n\n\n        /***********************************************************************\n        * Store the credential_issuer URL and pre_authorized_code for future use\n        ************************************************************************/\n        WalletStorage.credentialIssuer = credentialIssuer\n        WalletStorage.preAuthorizedCode = preAuthorizedCode\n\n        // Direct the user to this URL to complete their Identity Verification\n        issuerResponse.url?.let { url ->\n            openIdvForm(url)\n        } ?: fetchIssuerMetadata() // function shown in next step\n    }\n}\n";