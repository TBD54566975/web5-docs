export default "const payinCurrencyCode = 'USD'; // Desired payin currency code\nconst payoutCurrencyCode = 'KES'; // Desired payout currency code\n\n// Customer's signed credentials in JWT format\nconst credentials = [vcJwtResidence, vcJwtSanctions];\n\nconst matchedOfferings = []; // Array to store the matched offerings\n\nfor (const pfiDid of pfiDids) {\n  const offerings = await TbdexHttpClient.getOfferings({ pfiDid: pfiDid });\n\n  for (const offering of offerings) {\n    // Filter offerings based on the desired currency pair\n    if (\n      offering.data.payinCurrency.currencyCode === payinCurrencyCode &&\n      offering.data.payoutCurrency.currencyCode === payoutCurrencyCode\n    ) {\n      // Extract the presentation definition from the offering\n      const presentationDefinition = offering.data.requiredClaims;\n\n      try {\n        // Validate customer's VCs against the offering's presentation definition\n        //highlight-start\n        PresentationExchange.satisfiesPresentationDefinition({\n          vcJwts: credentials,\n          presentationDefinition: presentationDefinition,\n        });\n        //highlight-end\n\n        // Add offerings that match the customer's needs and qualifications\n        matchedOfferings.push(offering);\n      } catch (e) {\n        // Offerings where the customer's VCs do not meet the requirements are skipped\n      }\n    }\n  }\n}\n";