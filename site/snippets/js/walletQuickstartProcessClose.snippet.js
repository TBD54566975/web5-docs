export default "let attempts = 0;\nconst maxAttempts = 30;\nconst delay = 2000; // 2 seconds\n\nwhile (!close && attempts < maxAttempts) {\n    try {\n        const exchange = await TbdexHttpClient.getExchange({\n            pfiDid: pfiDid,\n            did: customerDid,\n            exchangeId: exchangeId,\n        });\n\n        for (const message of exchange) {\n            if (message instanceof Close) {\n                close = message;\n            }\n        }\n    } catch (e) {\n        if (e.statusCode === 404 || e.statusCode === 401) {\n            // Waiting on RFQ to be processed\n        } else throw e;\n    }\n    attempts++;\n    if (!close) await new Promise((resolve) => setTimeout(resolve, delay));\n}\nconst reasonForClose = close.data.reason;\nconst closeSuccess = close.data.success;\n";