export default "// Wait for Quote message to appear in the exchange\nexchangeId = rfq.exchangeId;\nlet attempts = 0;\nconst maxAttempts = 30;\nconst delay = 2000; // 2 seconds\n\nwhile (!quote && attempts < maxAttempts) {\n    try {\n        const exchange = await TbdexHttpClient.getExchange({\n            pfiDid: pfiDid,\n            did: customerDid,\n            exchangeId: exchangeId,\n        });\n\n        quote = exchange.find((msg) => msg instanceof Quote);\n\n        if (!quote) {\n            // Make sure the exchange is still open\n            close = exchange.find((msg) => msg instanceof Close);\n\n            if (close) {\n                break;\n            } else {\n                // Wait 2 seconds before making another request\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    } catch (e) {\n        if (e.statusCode === 404 || e.statusCode === 401) {\n            // Waiting on RFQ to be processed\n        } else throw e;\n    }\n    attempts++;\n}\n";